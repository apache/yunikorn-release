# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: yunikorn-scheduler
  labels:
    app: yunikorn
    chart: {{ include "yunikorn.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: yunikorn
      release: {{ .Release.Name }}
  template:
    metadata:
      name: yunikorn-scheduler
      labels:
        app: yunikorn
        component: yunikorn-scheduler
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: yunikorn-scheduler-k8s
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http1
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_ACCOUNT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ADMISSION_CONTROLLER_IMAGE_REGISTRY
              value: "{{ .Values.admission_controller_image.repository }}"
            - name: ADMISSION_CONTROLLER_IMAGE_TAG
              value: "{{ .Values.admission_controller_image.tag }}"
            - name: ADMISSION_CONTROLLER_IMAGE_PULL_POLICY
              value: "{{ .Values.admission_controller_image.pullPolicy }}"
            - name: ADMISSION_CONTROLLER_IMAGE_PULL_SECRETS
              value: "{{ .Values.ImagePullSecrets }}"
            - name: USER_LABEL_KEY
              value: "{{ .Values.UserLabelKey }}"
            - name: OPERATOR_PLUGINS
              value: "{{ .Values.operatorPlugins }}"
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/yunikorn/
          {{ if .Values.embedAdmissionController }}
          lifecycle:
              postStart:
                exec:
                  command: ["/bin/sh", "/admission_util.sh", "create"]
          {{ end }}
        - name: yunikorn-scheduler-web
          image: "{{ .Values.web_image.repository }}:{{ .Values.web_image.tag }}"
          imagePullPolicy: {{ .Values.web_image.pullPolicy }}
          ports:
            - name: http2
              containerPort: {{ .Values.service.port_web }}
              protocol: TCP
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
            limits:
              memory: "500Mi"
              cpu: "200m"
      volumes:
        - name: config-volume
          configMap:
            name: yunikorn-configs
